#!/usr/bin/twistd -ny 
from twisted.web import static, resource, server
from twisted.application import internet, service
from morbid import StompFactory
import sys,os

BASEDIR = os.path.dirname(os.path.abspath(__file__))
sys.path.append( BASEDIR )

from orbited import config
LOG_DIR='/var/log/cloudpub'
DJANGO_ADMIN_MEDIA='/usr/local/lib/python2.6/dist-packages/django/contrib/admin/media'
INTERFACE = "0.0.0.0"
STOMP_PORT = 9999
#Runtime config, is there a cleaner way?:
config.map["[access]"]={(INTERFACE, STOMP_PORT):"*",("localhost",STOMP_PORT):"*",("cloudpub.us",STOMP_PORT):"*"}
STATIC_PORT = 8000
RESTQ_PROXY_PORT = 5000

#The below depend on Orbited's logging.setup(...), from above.
from orbited import cometsession
from orbited import proxy

#local imports
from twisted_wsgi import get_root_resource
from realtime.stompfactory import get_stomp_factory
from realtime.message_handlers import MESSAGE_HANDLERS
from realtime.restq import RestQMessageProxy

#Twisted Application setup:
application = service.Application('cloudpub')
serviceCollection = service.IServiceCollection(application)

# Django and static file server:
root_resource = get_root_resource()
root_resource.putChild("site_media", static.File("media"))
root_resource.putChild("media", static.File( DJANGO_ADMIN_MEDIA ))

http_factory = server.Site(root_resource, logPath=LOG_DIR + "/http.log")
internet.TCPServer(STATIC_PORT, http_factory, interface=INTERFACE).setServiceParent(serviceCollection)

# Orbited server:
proxy_factory = proxy.ProxyFactory()
internet.GenericServer(cometsession.Port, factory=proxy_factory, resource=root_resource, childName="tcp", interface=INTERFACE).setServiceParent(serviceCollection)

# Stomp server:
stomp_factory = get_stomp_factory(INTERFACE, RESTQ_PROXY_PORT)
internet.TCPServer(STOMP_PORT, stomp_factory, interface=INTERFACE).setServiceParent(serviceCollection)

# RestQMessageProxy (message filter/logger/modifier):
restq_resource = RestQMessageProxy(MESSAGE_HANDLERS)
restq_proxy_factory = server.Site(restq_resource, logPath=LOG_DIR + "/restqproxy.log")
internet.TCPServer(RESTQ_PROXY_PORT, restq_proxy_factory, interface=INTERFACE).setServiceParent(serviceCollection)
# vim: set syntax=python

